#+TITLE: Quant

* Quant_Pandas
** 怎样导入数据
#+begin_src python :results output
import pandas as pd

df = pd.read_csv(
    filepath_or_buffer=r'/Users/pango/Projs/Quant/xbx_stock_2019_0420/data/sh600000.csv',
    encoding='gbk',
    sep=',', #另外比较常见的分隔符\t, |等,
    skiprows=1,
    #nrows = 15,
    parse_dates=['交易日期'],
    #index_col=['交易日期'], # 把指定的某一列设置为index ，指代行
    # usecols=['交易日期','收盘价'],
    # error_bad_lines=False, #当读入某行数据有问题，将会跳过这个数据
    # na_values='NULL', #将NULL默认改变为空值
    )
print(df)

#+end_src

#+RESULTS:
#+begin_example
          股票代码  股票名称       交易日期    开盘价  ...    收盘价   前收盘价          成交量           成交额
0     sh600000  浦发银行 1999-11-10  29.50  ...  27.75  10.00  174085100.0  4.859102e+09
1     sh600000  浦发银行 1999-11-11  27.58  ...  27.71  27.75   29403500.0  8.215822e+08
2     sh600000  浦发银行 1999-11-12  27.86  ...  28.05  27.71   15008000.0  4.215916e+08
3     sh600000  浦发银行 1999-11-15  28.20  ...  27.75  28.05   11921100.0  3.329528e+08
4     sh600000  浦发银行 1999-11-16  27.88  ...  26.55  27.75   23223100.0  6.289083e+08
...        ...   ...        ...    ...  ...    ...    ...          ...           ...
4577  sh600000  浦发银行 2019-03-29  10.98  ...  11.28  11.03   60526266.0  6.784365e+08
4578  sh600000  浦发银行 2019-04-01  11.36  ...  11.44  11.28   70637405.0  8.086575e+08
4579  sh600000  浦发银行 2019-04-02  11.50  ...  11.44  11.44   46714710.0  5.348968e+08
4580  sh600000  浦发银行 2019-04-03  11.37  ...  11.50  11.44   50271029.0  5.757994e+08
4581  sh600000  浦发银行 2019-04-04  11.55  ...  11.71  11.50   75232527.0  8.760995e+08

[4582 rows x 10 columns]
#+end_example

可以搜索：pandas read_csv 查询
** 用 Pandas 查看数据: 列操作
#+begin_src python :results output
import pandas as pd

df = pd.read_csv(
    filepath_or_buffer=r'/Users/pango/Projs/Quant/xbx_stock_2019_0420/data/sh600000.csv',
    encoding='gbk',
    #sep=',', #另外比较常见的分隔符\t, |等,
    skiprows=1,
    nrows = 15,
    parse_dates=['交易日期'],
    # index_col=['交易日期'], # 把指定的某一列设置为index ，指代行
    # usecols=['交易日期','收盘价'],
    # error_bad_lines=False, #当读入某行数据有问题，将会跳过这个数据
    # na_values='NULL', #将NULL默认改变为空值
    )
print(df.shape)
print(df.shape[0])
print(df.shape[1])
print(df.columns)
for col in df.columns:
    print(col)
print(df.index)
for idx in df.index:
    print(idx)
print(df.dtypes)
print(df.head(3))
print(df.tail(3))
print(df.sample(n=3))
print(df.sample(frac=0.4)) #随机抽取
print(df.describe())
#+end_src

#+RESULTS:
#+begin_example
(15, 10)
15
10
Index(['股票代码', '股票名称', '交易日期', '开盘价', '最高价', '最低价', '收盘价', '前收盘价', '成交量',
       '成交额'],
      dtype='object')
股票代码
股票名称
交易日期
开盘价
最高价
最低价
收盘价
前收盘价
成交量
成交额
RangeIndex(start=0, stop=15, step=1)
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
股票代码            object
股票名称            object
交易日期    datetime64[ns]
开盘价            float64
最高价            float64
最低价            float64
收盘价            float64
前收盘价           float64
成交量            float64
成交额            float64
dtype: object
       股票代码  股票名称       交易日期    开盘价  ...    收盘价   前收盘价          成交量           成交额
0  sh600000  浦发银行 1999-11-10  29.50  ...  27.75  10.00  174085100.0  4.859102e+09
1  sh600000  浦发银行 1999-11-11  27.58  ...  27.71  27.75   29403500.0  8.215822e+08
2  sh600000  浦发银行 1999-11-12  27.86  ...  28.05  27.71   15008000.0  4.215916e+08

[3 rows x 10 columns]
        股票代码  股票名称       交易日期    开盘价  ...    收盘价   前收盘价        成交量         成交额
12  sh600000  浦发银行 1999-11-26  26.43  ...  26.45  26.40  2282700.0  60508935.0
13  sh600000  浦发银行 1999-11-29  26.45  ...  26.33  26.45  2681200.0  71099577.0
14  sh600000  浦发银行 1999-11-30  26.30  ...  26.40  26.33  2371400.0  62335742.0

[3 rows x 10 columns]
        股票代码  股票名称       交易日期    开盘价  ...    收盘价   前收盘价         成交量          成交额
3   sh600000  浦发银行 1999-11-15  28.20  ...  27.75  28.05  11921100.0  332952812.0
13  sh600000  浦发银行 1999-11-29  26.45  ...  26.33  26.45   2681200.0   71099577.0
14  sh600000  浦发银行 1999-11-30  26.30  ...  26.40  26.33   2371400.0   62335742.0

[3 rows x 10 columns]
        股票代码  股票名称       交易日期    开盘价  ...    收盘价   前收盘价         成交量          成交额
8   sh600000  浦发银行 1999-11-22  26.88  ...  26.45  26.88   5535400.0  147086153.0
9   sh600000  浦发银行 1999-11-23  26.45  ...  26.45  26.45   3844000.0  101224493.0
11  sh600000  浦发银行 1999-11-25  26.30  ...  26.40  26.43   5725300.0  150528185.0
2   sh600000  浦发银行 1999-11-12  27.86  ...  28.05  27.71  15008000.0  421591623.0
14  sh600000  浦发银行 1999-11-30  26.30  ...  26.40  26.33   2371400.0   62335742.0
10  sh600000  浦发银行 1999-11-24  26.44  ...  26.43  26.45   4098000.0  107344461.0

[6 rows x 10 columns]
             开盘价        最高价        最低价  ...       前收盘价           成交量           成交额
count  15.000000  15.000000  15.000000  ...  15.000000  1.500000e+01  1.500000e+01
mean   27.164667  27.446000  26.622667  ...  25.826667  2.027019e+07  5.605817e+08
std     0.922403   0.945718   0.618021  ...   4.418887  4.328307e+07  1.209523e+09
min    26.300000  26.500000  26.010000  ...  10.000000  2.282700e+06  6.050894e+07
25%    26.445000  26.660000  26.130000  ...  26.440000  3.971000e+06  1.042845e+08
50%    26.880000  27.180000  26.370000  ...  26.550000  5.725300e+06  1.505282e+08
75%    27.720000  28.110000  26.900000  ...  27.445000  1.346455e+07  3.772722e+08
max    29.500000  29.800000  27.770000  ...  28.050000  1.740851e+08  4.859102e+09

[8 rows x 7 columns]
#+end_example
** 对 print 出的数据格式进行修正
#+begin_src python :results output
import pandas as pd

df = pd.read_csv(
    filepath_or_buffer=r'/Users/pango/Projs/Quant/xbx_stock_2019_0420/data/sh600000.csv',
    encoding='gbk',
    #sep=',', #另外比较常见的分隔符\t, |等,
    skiprows=1,
    nrows = 15,
    parse_dates=['交易日期'],
    # index_col=['交易日期'], # 把指定的某一列设置为index ，指代行
    # usecols=['交易日期','收盘价'],
    # error_bad_lines=False, #当读入某行数据有问题，将会跳过这个数据
    # na_values='NULL', #将NULL默认改变为空值
    )

pd.set_option('expand_frame_repr', False) #建议置顶
print(df.head(3))
pd.set_option('max_colwidth',10)
print(df.head(3))
pd.set_option('display.max_rows',100) #设定显示最大的行数
print(df)
pd.set_option('precision',1) #
print(df.head())
#+end_src

#+RESULTS:
#+begin_example
       股票代码  股票名称       交易日期    开盘价    最高价    最低价    收盘价   前收盘价          成交量           成交额
0  sh600000  浦发银行 1999-11-10  29.50  29.80  27.00  27.75  10.00  174085100.0  4.859102e+09
1  sh600000  浦发银行 1999-11-11  27.58  28.38  27.53  27.71  27.75   29403500.0  8.215822e+08
2  sh600000  浦发银行 1999-11-12  27.86  28.30  27.77  28.05  27.71   15008000.0  4.215916e+08
       股票代码  股票名称       交易日期    开盘价    最高价    最低价    收盘价   前收盘价        成交量        成交额
0  sh600000  浦发银行 1999-11-10  29.50  29.80  27.00  27.75  10.00  174085...  4.8591...
1  sh600000  浦发银行 1999-11-11  27.58  28.38  27.53  27.71  27.75  294035...  8.2158...
2  sh600000  浦发银行 1999-11-12  27.86  28.30  27.77  28.05  27.71  150080...  4.2159...
        股票代码  股票名称       交易日期    开盘价    最高价    最低价    收盘价   前收盘价        成交量        成交额
0   sh600000  浦发银行 1999-11-10  29.50  29.80  27.00  27.75  10.00  174085...  4.8591...
1   sh600000  浦发银行 1999-11-11  27.58  28.38  27.53  27.71  27.75  294035...  8.2158...
2   sh600000  浦发银行 1999-11-12  27.86  28.30  27.77  28.05  27.71  150080...  4.2159...
3   sh600000  浦发银行 1999-11-15  28.20  28.25  27.70  27.75  28.05  119211...  3.3295...
4   sh600000  浦发银行 1999-11-16  27.88  27.97  26.48  26.55  27.75  232231...  6.2890...
5   sh600000  浦发银行 1999-11-17  26.50  27.18  26.37  27.18  26.55  100526...  2.6899...
6   sh600000  浦发银行 1999-11-18  27.20  27.58  26.78  27.02  27.18  8446500.0  2.2957...
7   sh600000  浦发银行 1999-11-19  27.50  27.53  26.80  26.88  27.02  5375000.0  1.4588...
8   sh600000  浦发银行 1999-11-22  26.88  26.95  26.30  26.45  26.88  5535400.0  1.4708...
9   sh600000  浦发银行 1999-11-23  26.45  26.55  26.10  26.45  26.45  3844000.0  1.0122...
10  sh600000  浦发银行 1999-11-24  26.44  26.55  26.01  26.43  26.45  4098000.0  1.0734...
11  sh600000  浦发银行 1999-11-25  26.30  26.66  26.02  26.40  26.43  5725300.0  1.5052...
12  sh600000  浦发银行 1999-11-26  26.43  26.66  26.15  26.45  26.40  2282700.0  6.0508...
13  sh600000  浦发银行 1999-11-29  26.45  26.83  26.22  26.33  26.45  2681200.0  7.1099...
14  sh600000  浦发银行 1999-11-30  26.30  26.50  26.11  26.40  26.33  2371400.0  6.2335...
        股票代码  股票名称       交易日期   开盘价   最高价   最低价   收盘价  前收盘价      成交量      成交额
0   sh600000  浦发银行 1999-11-10  29.5  29.8  27.0  27.8  10.0  1.7e+08  4.9e+09
1   sh600000  浦发银行 1999-11-11  27.6  28.4  27.5  27.7  27.8  2.9e+07  8.2e+08
2   sh600000  浦发银行 1999-11-12  27.9  28.3  27.8  28.1  27.7  1.5e+07  4.2e+08
3   sh600000  浦发银行 1999-11-15  28.2  28.2  27.7  27.8  28.1  1.2e+07  3.3e+08
4   sh600000  浦发银行 1999-11-16  27.9  28.0  26.5  26.6  27.8  2.3e+07  6.3e+08
5   sh600000  浦发银行 1999-11-17  26.5  27.2  26.4  27.2  26.6  1.0e+07  2.7e+08
6   sh600000  浦发银行 1999-11-18  27.2  27.6  26.8  27.0  27.2  8.4e+06  2.3e+08
7   sh600000  浦发银行 1999-11-19  27.5  27.5  26.8  26.9  27.0  5.4e+06  1.5e+08
8   sh600000  浦发银行 1999-11-22  26.9  26.9  26.3  26.4  26.9  5.5e+06  1.5e+08
9   sh600000  浦发银行 1999-11-23  26.4  26.6  26.1  26.4  26.4  3.8e+06  1.0e+08
10  sh600000  浦发银行 1999-11-24  26.4  26.6  26.0  26.4  26.4  4.1e+06  1.1e+08
11  sh600000  浦发银行 1999-11-25  26.3  26.7  26.0  26.4  26.4  5.7e+06  1.5e+08
12  sh600000  浦发银行 1999-11-26  26.4  26.7  26.1  26.4  26.4  2.3e+06  6.1e+07
13  sh600000  浦发银行 1999-11-29  26.4  26.8  26.2  26.3  26.4  2.7e+06  7.1e+07
14  sh600000  浦发银行 1999-11-30  26.3  26.5  26.1  26.4  26.3  2.4e+06  6.2e+07
#+end_example

** 对列进行操作
#+begin_src python :results output
import pandas as pd

df = pd.read_csv(
    filepath_or_buffer=r'/Users/pango/Projs/Quant/xbx_stock_2019_0420/data/sh600000.csv',
    encoding='gbk',
    #sep=',', #另外比较常见的分隔符\t, |等,
    skiprows=1,
    nrows = 15,
    parse_dates=['交易日期'],
    # index_col=['交易日期'], # 把指定的某一列设置为index ，指代行
    # usecols=['交易日期','收盘价'],
    # error_bad_lines=False, #当读入某行数据有问题，将会跳过这个数据
    # na_values='NULL', #将NULL默认改变为空值
    )

print(df['开盘价'])
print(df[['交易日期','收盘价']])
print(df[['开盘价']]) #dataFrame
#+end_src

** loc 操作
#+begin_src python :results output
import pandas as pd

df = pd.read_csv(
    filepath_or_buffer=r'/Users/pango/Projs/Quant/xbx_stock_2019_0420/data/sh600000.csv',
    encoding='gbk',
    #sep=',', #另外比较常见的分隔符\t, |等,
    skiprows=1,
    # nrows = 15,
    # parse_dates=['交易日期'],
    index_col=['交易日期'], # 把指定的某一列设置为index ，指代行
    # usecols=['交易日期','收盘价'],
    # error_bad_lines=False, #当读入某行数据有问题，将会跳过这个数据
    # na_values='NULL', #将NULL默认改变为空值
    )

print(df)
print(df.loc['1999-11-11']) #直接用index名查询
print(df.loc[['1999-11-11','1999-11-25']]) #选取指定的两行
print(df.loc['2000-03-30':'2000-04-30']) #选取在此范围内的多行
print(df.loc[:]) #选取所有数据
print(df.loc[:, '开盘价':'收盘价'])  #选取列
print(df.loc[:,['开盘价','收盘价']])
print(df.loc['2000-03-30':'2000-07-30','开盘价':'收盘价'])
print(df.loc[:,:]) #可以简写成这样的形式
print(df.at['2000-03-30','开盘价']) #和print(df.at['2000-03-30','开盘价'])也行，at是专门用来左指定位置的，读取某个元素用at效率更高
#+end_src

#+RESULTS:
#+begin_example
                股票代码  股票名称    开盘价  ...   前收盘价          成交量           成交额
交易日期                               ...
1999-11-10  sh600000  浦发银行  29.50  ...  10.00  174085100.0  4.859102e+09
1999-11-11  sh600000  浦发银行  27.58  ...  27.75   29403500.0  8.215822e+08
1999-11-12  sh600000  浦发银行  27.86  ...  27.71   15008000.0  4.215916e+08
1999-11-15  sh600000  浦发银行  28.20  ...  28.05   11921100.0  3.329528e+08
1999-11-16  sh600000  浦发银行  27.88  ...  27.75   23223100.0  6.289083e+08
...              ...   ...    ...  ...    ...          ...           ...
2019-03-29  sh600000  浦发银行  10.98  ...  11.03   60526266.0  6.784365e+08
2019-04-01  sh600000  浦发银行  11.36  ...  11.28   70637405.0  8.086575e+08
2019-04-02  sh600000  浦发银行  11.50  ...  11.44   46714710.0  5.348968e+08
2019-04-03  sh600000  浦发银行  11.37  ...  11.44   50271029.0  5.757994e+08
2019-04-04  sh600000  浦发银行  11.55  ...  11.50   75232527.0  8.760995e+08

[4582 rows x 9 columns]
股票代码       sh600000
股票名称           浦发银行
开盘价           27.58
最高价           28.38
最低价           27.53
收盘价           27.71
前收盘价          27.75
成交量      29403500.0
成交额     821582199.0
Name: 1999-11-11, dtype: object
                股票代码  股票名称    开盘价    最高价  ...    收盘价   前收盘价         成交量          成交额
交易日期                                      ...
1999-11-11  sh600000  浦发银行  27.58  28.38  ...  27.71  27.75  29403500.0  821582199.0
1999-11-25  sh600000  浦发银行  26.30  26.66  ...  26.40  26.43   5725300.0  150528185.0

[2 rows x 9 columns]
                股票代码  股票名称    开盘价    最高价  ...    收盘价   前收盘价         成交量          成交额
交易日期                                      ...
2000-03-30  sh600000  浦发银行  25.25  25.72  ...  25.38  25.18   4400800.0  111744655.0
2000-03-31  sh600000  浦发银行  25.45  25.58  ...  25.22  25.38   4320400.0  109090852.0
2000-04-03  sh600000  浦发银行  25.20  25.50  ...  25.24  25.22   3498400.0   88393318.0
2000-04-04  sh600000  浦发银行  25.20  25.20  ...  24.90  25.24   4307100.0  107536323.0
2000-04-05  sh600000  浦发银行  24.90  25.49  ...  25.15  24.90   3427000.0   85948606.0
2000-04-06  sh600000  浦发银行  25.15  25.39  ...  25.31  25.15   2927600.0   73823696.0
2000-04-07  sh600000  浦发银行  25.42  25.90  ...  25.69  25.31   6006300.0  154300910.0
2000-04-10  sh600000  浦发银行  25.72  25.90  ...  25.54  25.69   3327800.0   85045430.0
2000-04-11  sh600000  浦发银行  25.60  26.08  ...  25.56  25.54   6213900.0  159922397.0
2000-04-12  sh600000  浦发银行  25.62  26.00  ...  25.45  25.56   4634400.0  119159205.0
2000-04-13  sh600000  浦发银行  25.45  25.88  ...  25.60  25.45   4206500.0  107735819.0
2000-04-14  sh600000  浦发银行  25.68  26.20  ...  25.83  25.60  11250500.0  291591767.0
2000-04-17  sh600000  浦发银行  26.00  26.20  ...  25.30  25.83   7976900.0  204556962.0
2000-04-18  sh600000  浦发银行  25.31  25.45  ...  25.32  25.30   3894500.0   98184097.0
2000-04-19  sh600000  浦发银行  25.45  25.78  ...  25.30  25.32   2755600.0   69942881.0
2000-04-20  sh600000  浦发银行  25.30  25.50  ...  25.32  25.30   3636700.0   91864727.0
2000-04-21  sh600000  浦发银行  25.00  25.49  ...  25.15  25.32   3965500.0   99685689.0
2000-04-24  sh600000  浦发银行  25.15  25.20  ...  24.82  25.15   5913800.0  147290986.0
2000-04-25  sh600000  浦发银行  24.81  25.09  ...  24.84  24.82   2309500.0   57489169.0
2000-04-26  sh600000  浦发银行  24.88  25.57  ...  25.00  24.84   3559400.0   89234644.0
2000-04-27  sh600000  浦发银行  25.00  25.20  ...  24.74  25.00   3284200.0   81550296.0
2000-04-28  sh600000  浦发银行  24.74  25.00  ...  25.00  24.74   3210800.0   79526614.0

[22 rows x 9 columns]
                股票代码  股票名称    开盘价  ...   前收盘价          成交量           成交额
交易日期                               ...
1999-11-10  sh600000  浦发银行  29.50  ...  10.00  174085100.0  4.859102e+09
1999-11-11  sh600000  浦发银行  27.58  ...  27.75   29403500.0  8.215822e+08
1999-11-12  sh600000  浦发银行  27.86  ...  27.71   15008000.0  4.215916e+08
1999-11-15  sh600000  浦发银行  28.20  ...  28.05   11921100.0  3.329528e+08
1999-11-16  sh600000  浦发银行  27.88  ...  27.75   23223100.0  6.289083e+08
...              ...   ...    ...  ...    ...          ...           ...
2019-03-29  sh600000  浦发银行  10.98  ...  11.03   60526266.0  6.784365e+08
2019-04-01  sh600000  浦发银行  11.36  ...  11.28   70637405.0  8.086575e+08
2019-04-02  sh600000  浦发银行  11.50  ...  11.44   46714710.0  5.348968e+08
2019-04-03  sh600000  浦发银行  11.37  ...  11.44   50271029.0  5.757994e+08
2019-04-04  sh600000  浦发银行  11.55  ...  11.50   75232527.0  8.760995e+08

[4582 rows x 9 columns]
              开盘价    最高价    最低价    收盘价
交易日期
1999-11-10  29.50  29.80  27.00  27.75
1999-11-11  27.58  28.38  27.53  27.71
1999-11-12  27.86  28.30  27.77  28.05
1999-11-15  28.20  28.25  27.70  27.75
1999-11-16  27.88  27.97  26.48  26.55
...           ...    ...    ...    ...
2019-03-29  10.98  11.30  10.98  11.28
2019-04-01  11.36  11.52  11.29  11.44
2019-04-02  11.50  11.52  11.41  11.44
2019-04-03  11.37  11.54  11.34  11.50
2019-04-04  11.55  11.71  11.54  11.71

[4582 rows x 4 columns]
              开盘价    收盘价
交易日期
1999-11-10  29.50  27.75
1999-11-11  27.58  27.71
1999-11-12  27.86  28.05
1999-11-15  28.20  27.75
1999-11-16  27.88  26.55
...           ...    ...
2019-03-29  10.98  11.28
2019-04-01  11.36  11.44
2019-04-02  11.50  11.44
2019-04-03  11.37  11.50
2019-04-04  11.55  11.71

[4582 rows x 2 columns]
              开盘价    最高价    最低价    收盘价
交易日期
2000-03-30  25.25  25.72  25.25  25.38
2000-03-31  25.45  25.58  25.10  25.22
2000-04-03  25.20  25.50  25.10  25.24
2000-04-04  25.20  25.20  24.86  24.90
2000-04-05  24.90  25.49  24.88  25.15
...           ...    ...    ...    ...
2000-07-24  23.56  23.65  23.28  23.31
2000-07-25  23.30  23.52  23.20  23.52
2000-07-26  23.50  23.52  23.29  23.39
2000-07-27  23.40  25.70  23.40  24.53
2000-07-28  24.40  24.70  23.98  23.99

[81 rows x 4 columns]
#+end_example

** iloc 操作
#+begin_src python :results output
import pandas as pd

df = pd.read_csv(
    filepath_or_buffer=r'/Users/pango/Projs/Quant/xbx_stock_2019_0420/data/sh600000.csv',
    encoding='gbk',
    #sep=',', #另外比较常见的分隔符\t, |等,
    skiprows=1,
    # nrows = 15,
    # parse_dates=['交易日期'],
    index_col=['交易日期'], # 把指定的某一列设置为index ，指代行
    # usecols=['交易日期','收盘价'],
    # error_bad_lines=False, #当读入某行数据有问题，将会跳过这个数据
    # na_values='NULL', #将NULL默认改变为空值
    )
print(df)
print(df.iloc[0]) #读取第一行的数据，类型是series ，貌似标题默认不选
print(df.iloc[1:3]) #读取第二行到第三行的数据, 但是使用loc是包含在里面的
print(df.iloc[:,1:3])
print(df.iloc[:,:])
print(df.iat[1,1])  #同iloc，iat效率更高速度更快
#+end_src

#+RESULTS:
#+begin_example
                股票代码  股票名称    开盘价  ...   前收盘价          成交量           成交额
交易日期                               ...
1999-11-10  sh600000  浦发银行  29.50  ...  10.00  174085100.0  4.859102e+09
1999-11-11  sh600000  浦发银行  27.58  ...  27.75   29403500.0  8.215822e+08
1999-11-12  sh600000  浦发银行  27.86  ...  27.71   15008000.0  4.215916e+08
1999-11-15  sh600000  浦发银行  28.20  ...  28.05   11921100.0  3.329528e+08
1999-11-16  sh600000  浦发银行  27.88  ...  27.75   23223100.0  6.289083e+08
...              ...   ...    ...  ...    ...          ...           ...
2019-03-29  sh600000  浦发银行  10.98  ...  11.03   60526266.0  6.784365e+08
2019-04-01  sh600000  浦发银行  11.36  ...  11.28   70637405.0  8.086575e+08
2019-04-02  sh600000  浦发银行  11.50  ...  11.44   46714710.0  5.348968e+08
2019-04-03  sh600000  浦发银行  11.37  ...  11.44   50271029.0  5.757994e+08
2019-04-04  sh600000  浦发银行  11.55  ...  11.50   75232527.0  8.760995e+08

[4582 rows x 9 columns]
股票代码        sh600000
股票名称            浦发银行
开盘价             29.5
最高价             29.8
最低价             27.0
收盘价            27.75
前收盘价            10.0
成交量      174085100.0
成交额     4859102435.0
Name: 1999-11-10, dtype: object
                股票代码  股票名称    开盘价    最高价  ...    收盘价   前收盘价         成交量          成交额
交易日期                                      ...
1999-11-11  sh600000  浦发银行  27.58  28.38  ...  27.71  27.75  29403500.0  821582199.0
1999-11-12  sh600000  浦发银行  27.86  28.30  ...  28.05  27.71  15008000.0  421591623.0

[2 rows x 9 columns]
            股票名称    开盘价
交易日期
1999-11-10  浦发银行  29.50
1999-11-11  浦发银行  27.58
1999-11-12  浦发银行  27.86
1999-11-15  浦发银行  28.20
1999-11-16  浦发银行  27.88
...          ...    ...
2019-03-29  浦发银行  10.98
2019-04-01  浦发银行  11.36
2019-04-02  浦发银行  11.50
2019-04-03  浦发银行  11.37
2019-04-04  浦发银行  11.55

[4582 rows x 2 columns]
                股票代码  股票名称    开盘价  ...   前收盘价          成交量           成交额
交易日期                               ...
1999-11-10  sh600000  浦发银行  29.50  ...  10.00  174085100.0  4.859102e+09
1999-11-11  sh600000  浦发银行  27.58  ...  27.75   29403500.0  8.215822e+08
1999-11-12  sh600000  浦发银行  27.86  ...  27.71   15008000.0  4.215916e+08
1999-11-15  sh600000  浦发银行  28.20  ...  28.05   11921100.0  3.329528e+08
1999-11-16  sh600000  浦发银行  27.88  ...  27.75   23223100.0  6.289083e+08
...              ...   ...    ...  ...    ...          ...           ...
2019-03-29  sh600000  浦发银行  10.98  ...  11.03   60526266.0  6.784365e+08
2019-04-01  sh600000  浦发银行  11.36  ...  11.28   70637405.0  8.086575e+08
2019-04-02  sh600000  浦发银行  11.50  ...  11.44   46714710.0  5.348968e+08
2019-04-03  sh600000  浦发银行  11.37  ...  11.44   50271029.0  5.757994e+08
2019-04-04  sh600000  浦发银行  11.55  ...  11.50   75232527.0  8.760995e+08

[4582 rows x 9 columns]
浦发银行
#+end_example
*** 练习
#+begin_src python :results output
import pandas as pd

df = pd.read_csv(
    filepath_or_buffer=r'/Users/pango/Projs/Quant/xbx_stock_2019_0420/data/sh600000.csv',
    encoding='gbk',
    #sep=',', #另外比较常见的分隔符\t, |等,
    skiprows=1,
    # nrows = 15,
    # parse_dates=['交易日期'],
    index_col=['交易日期'], # 把指定的某一列设置为index ，指代行
    # usecols=['交易日期','收盘价'],
    # error_bad_lines=False, #当读入某行数据有问题，将会跳过这个数据
    # na_values='NULL', #将NULL默认改变为空值
    )

#查询2010年全年的数据
print(df.loc['2011-01-01':'2011-12-30','收盘价'])
#查询2019年1月1日的价格
print(df.at['2019-01-03','收盘价'])
#查询2015年最后三个月的收盘价，开盘价
print(df.loc['2015-09-01':'2015-12-30',['开盘价','收盘价']])
#还有其他的函数计算其他的指标，在实际使用中遇到可以自己搜索
print('******************************************')



#+end_src

#+RESULTS:
#+begin_example
交易日期
2011-01-04    12.61
2011-01-05    12.71
2011-01-06    12.67
2011-01-07    13.23
2011-01-10    13.07
              ...
2011-12-26     8.47
2011-12-27     8.44
2011-12-28     8.38
2011-12-29     8.35
2011-12-30     8.49
Name: 收盘价, Length: 243, dtype: float64
9.81
              开盘价    收盘价
交易日期
2015-09-01  14.66  15.33
2015-09-02  14.90  14.89
2015-09-07  14.73  14.50
2015-09-08  14.52  15.06
2015-09-09  14.91  15.16
...           ...    ...
2015-12-24  18.85  19.04
2015-12-25  19.02  19.32
2015-12-28  19.37  18.70
2015-12-29  18.63  18.74
2015-12-30  18.71  18.57

[73 rows x 2 columns]
,******************************************
              收盘价  下周期收盘价
交易日期
1999-11-10  27.75   27.71
1999-11-11  27.71   28.05
1999-11-12  28.05   27.75
1999-11-15  27.75   26.55
1999-11-16  26.55   27.18
...           ...     ...
2019-03-29  11.28   11.44
2019-04-01  11.44   11.44
2019-04-02  11.44   11.50
2019-04-03  11.50   11.71
2019-04-04  11.71     NaN

[4582 rows x 2 columns]
#+end_example
** 列操作
#+begin_src python :results output
import pandas as pd

pd.set_option('expand_frame_repr',False)
df = pd.read_csv(
    filepath_or_buffer=r'/Users/pango/Projs/Quant/xbx_stock_2019_0420/data/sh600000.csv',
    encoding='gbk',
    #sep=',', #另外比较常见的分隔符\t, |等,
    skiprows=1,
    # nrows = 15,
    # parse_dates=['交易日期'],
    # index_col=['交易日期'], # 把指定的某一列设置为index ，指代行
    # usecols=['交易日期','收盘价'],
    # error_bad_lines=False, #当读入某行数据有问题，将会跳过这个数据
    # na_values='NULL', #将NULL默认改变为空值
    )
#列操作
print(df['交易日期'] + ' 15:00:00') #对整列进行加法操作
print(df['收盘价'] * 100)
print(df[['收盘价','成交量']])
print(df['收盘价'] * df['成交量']) #两列之间可以直接操作
#新增一列
df['交易日期2'] = df['交易日期'] + ' 00:00:00'
df['交易所'] = '上交所'
print(df)

#统计函数
print(df['收盘价'].mean()) # 求平均值
print(df[['收盘价', '成交量']].mean()) #求两列的均值m 返回的结果是series
print(df[['收盘价', '成交量']])
print(df[['收盘价', '成交量']].mean(axis=1)) #代表整体列进行操作，求两列的均值，默认axis=0
print(df[['最高价', '最低价']].mean(axis=1)) #求最高价和最低价的均值

print(df['最高价'].max()) #最大值
print(df['最低价'].min()) #最小值
print(df['收盘价'].std())
print(df['收盘价'].count()) #非空数据
print(df['收盘价'].median()) #中位数
print(df['收盘价'].quantile(0.25)) #25%的分位数
# 对一行求均值还是对一列求均值

# shift类函数，删除列的方式
df['下周期收盘价'] = df['收盘价'].shift (-1) # 读取上一行的数据
print(df[['收盘价','下周期收盘价']]) #针对列中每一个元素向上或向下挪动
del df['下周期收盘价'] # 删除某一列的方法， 一次只能删一列
print(df)

df['涨跌'] = df['收盘价'].diff(1) #挪动数据求差值
print(df[['收盘价', '涨跌']])
# df.drop(['涨跌'], axis=1, inplace = True) # 使用drop删除列, aixs = 1删除整列, 一次可以删多列, inplace = False的话涨跌是删不掉的
df['涨跌幅'] = df['收盘价'].pct_change(1) # 使用后一行涨跌幅收盘价和前面的收盘价左对比，和diff()类似，只是diff()是差值，但是pct_change()是百分比
print(df)
# ===cum(cumulative) 类函数
df['累计成交量'] = df['成交量'].cumsum() # 该列的累加值
print(df[['交易日期','成交量', '累计成交量']])
print((df['涨跌幅'] + 1.0).cumprod()) # 该列的累乘值 prod = product

# 其他列函数
df['收盘价_排名'] = df['收盘价'].rank(ascending=True, pct=False) # 从小到大， pct=Falst %排名百分比
print(df[['收盘价', '收盘价_排名']]) # 数值排名
del df['收盘价_排名']
print(df['收盘价'].value_counts()) # 计数

#+end_src

#+RESULTS:
#+begin_example
0       1999-11-10 15:00:00
1       1999-11-11 15:00:00
2       1999-11-12 15:00:00
3       1999-11-15 15:00:00
4       1999-11-16 15:00:00
               ...
4577    2019-03-29 15:00:00
4578    2019-04-01 15:00:00
4579    2019-04-02 15:00:00
4580    2019-04-03 15:00:00
4581    2019-04-04 15:00:00
Name: 交易日期, Length: 4582, dtype: object
0       2775.0
1       2771.0
2       2805.0
3       2775.0
4       2655.0
         ...
4577    1128.0
4578    1144.0
4579    1144.0
4580    1150.0
4581    1171.0
Name: 收盘价, Length: 4582, dtype: float64
        收盘价          成交量
0     27.75  174085100.0
1     27.71   29403500.0
2     28.05   15008000.0
3     27.75   11921100.0
4     26.55   23223100.0
...     ...          ...
4577  11.28   60526266.0
4578  11.44   70637405.0
4579  11.44   46714710.0
4580  11.50   50271029.0
4581  11.71   75232527.0

[4582 rows x 2 columns]
0       4.830862e+09
1       8.147710e+08
2       4.209744e+08
3       3.308105e+08
4       6.165733e+08
            ...
4577    6.827363e+08
4578    8.080919e+08
4579    5.344163e+08
4580    5.781168e+08
4581    8.809729e+08
Length: 4582, dtype: float64
          股票代码  股票名称        交易日期    开盘价    最高价    最低价    收盘价   前收盘价          成交量           成交额                交易日期2  交易所
0     sh600000  浦发银行  1999-11-10  29.50  29.80  27.00  27.75  10.00  174085100.0  4.859102e+09  1999-11-10 00:00:00  上交所
1     sh600000  浦发银行  1999-11-11  27.58  28.38  27.53  27.71  27.75   29403500.0  8.215822e+08  1999-11-11 00:00:00  上交所
2     sh600000  浦发银行  1999-11-12  27.86  28.30  27.77  28.05  27.71   15008000.0  4.215916e+08  1999-11-12 00:00:00  上交所
3     sh600000  浦发银行  1999-11-15  28.20  28.25  27.70  27.75  28.05   11921100.0  3.329528e+08  1999-11-15 00:00:00  上交所
4     sh600000  浦发银行  1999-11-16  27.88  27.97  26.48  26.55  27.75   23223100.0  6.289083e+08  1999-11-16 00:00:00  上交所
...        ...   ...         ...    ...    ...    ...    ...    ...          ...           ...                  ...  ...
4577  sh600000  浦发银行  2019-03-29  10.98  11.30  10.98  11.28  11.03   60526266.0  6.784365e+08  2019-03-29 00:00:00  上交所
4578  sh600000  浦发银行  2019-04-01  11.36  11.52  11.29  11.44  11.28   70637405.0  8.086575e+08  2019-04-01 00:00:00  上交所
4579  sh600000  浦发银行  2019-04-02  11.50  11.52  11.41  11.44  11.44   46714710.0  5.348968e+08  2019-04-02 00:00:00  上交所
4580  sh600000  浦发银行  2019-04-03  11.37  11.54  11.34  11.50  11.44   50271029.0  5.757994e+08  2019-04-03 00:00:00  上交所
4581  sh600000  浦发银行  2019-04-04  11.55  11.71  11.54  11.71  11.50   75232527.0  8.760995e+08  2019-04-04 00:00:00  上交所

[4582 rows x 12 columns]
15.650061108686163
收盘价    1.565006e+01
成交量    5.692092e+07
dtype: float64
        收盘价          成交量
0     27.75  174085100.0
1     27.71   29403500.0
2     28.05   15008000.0
3     27.75   11921100.0
4     26.55   23223100.0
...     ...          ...
4577  11.28   60526266.0
4578  11.44   70637405.0
4579  11.44   46714710.0
4580  11.50   50271029.0
4581  11.71   75232527.0

[4582 rows x 2 columns]
0       8.704256e+07
1       1.470176e+07
2       7.504014e+06
3       5.960564e+06
4       1.161156e+07
            ...
4577    3.026314e+07
4578    3.531871e+07
4579    2.335736e+07
4580    2.513552e+07
4581    3.761627e+07
Length: 4582, dtype: float64
0       28.400
1       27.955
2       28.035
3       27.975
4       27.225
         ...
4577    11.140
4578    11.405
4579    11.465
4580    11.440
4581    11.625
Length: 4582, dtype: float64
61.97
6.41
8.741688307706207
4582
13.05
9.75
        收盘价  下周期收盘价
0     27.75   27.71
1     27.71   28.05
2     28.05   27.75
3     27.75   26.55
4     26.55   27.18
...     ...     ...
4577  11.28   11.44
4578  11.44   11.44
4579  11.44   11.50
4580  11.50   11.71
4581  11.71     NaN

[4582 rows x 2 columns]
          股票代码  股票名称        交易日期    开盘价    最高价    最低价    收盘价   前收盘价          成交量           成交额                交易日期2  交易所
0     sh600000  浦发银行  1999-11-10  29.50  29.80  27.00  27.75  10.00  174085100.0  4.859102e+09  1999-11-10 00:00:00  上交所
1     sh600000  浦发银行  1999-11-11  27.58  28.38  27.53  27.71  27.75   29403500.0  8.215822e+08  1999-11-11 00:00:00  上交所
2     sh600000  浦发银行  1999-11-12  27.86  28.30  27.77  28.05  27.71   15008000.0  4.215916e+08  1999-11-12 00:00:00  上交所
3     sh600000  浦发银行  1999-11-15  28.20  28.25  27.70  27.75  28.05   11921100.0  3.329528e+08  1999-11-15 00:00:00  上交所
4     sh600000  浦发银行  1999-11-16  27.88  27.97  26.48  26.55  27.75   23223100.0  6.289083e+08  1999-11-16 00:00:00  上交所
...        ...   ...         ...    ...    ...    ...    ...    ...          ...           ...                  ...  ...
4577  sh600000  浦发银行  2019-03-29  10.98  11.30  10.98  11.28  11.03   60526266.0  6.784365e+08  2019-03-29 00:00:00  上交所
4578  sh600000  浦发银行  2019-04-01  11.36  11.52  11.29  11.44  11.28   70637405.0  8.086575e+08  2019-04-01 00:00:00  上交所
4579  sh600000  浦发银行  2019-04-02  11.50  11.52  11.41  11.44  11.44   46714710.0  5.348968e+08  2019-04-02 00:00:00  上交所
4580  sh600000  浦发银行  2019-04-03  11.37  11.54  11.34  11.50  11.44   50271029.0  5.757994e+08  2019-04-03 00:00:00  上交所
4581  sh600000  浦发银行  2019-04-04  11.55  11.71  11.54  11.71  11.50   75232527.0  8.760995e+08  2019-04-04 00:00:00  上交所

[4582 rows x 12 columns]
        收盘价    涨跌
0     27.75   NaN
1     27.71 -0.04
2     28.05  0.34
3     27.75 -0.30
4     26.55 -1.20
...     ...   ...
4577  11.28  0.25
4578  11.44  0.16
4579  11.44  0.00
4580  11.50  0.06
4581  11.71  0.21

[4582 rows x 2 columns]
          股票代码  股票名称        交易日期    开盘价    最高价    最低价    收盘价   前收盘价          成交量           成交额                交易日期2  交易所    涨跌       涨跌幅
0     sh600000  浦发银行  1999-11-10  29.50  29.80  27.00  27.75  10.00  174085100.0  4.859102e+09  1999-11-10 00:00:00  上交所   NaN       NaN
1     sh600000  浦发银行  1999-11-11  27.58  28.38  27.53  27.71  27.75   29403500.0  8.215822e+08  1999-11-11 00:00:00  上交所 -0.04 -0.001441
2     sh600000  浦发银行  1999-11-12  27.86  28.30  27.77  28.05  27.71   15008000.0  4.215916e+08  1999-11-12 00:00:00  上交所  0.34  0.012270
3     sh600000  浦发银行  1999-11-15  28.20  28.25  27.70  27.75  28.05   11921100.0  3.329528e+08  1999-11-15 00:00:00  上交所 -0.30 -0.010695
4     sh600000  浦发银行  1999-11-16  27.88  27.97  26.48  26.55  27.75   23223100.0  6.289083e+08  1999-11-16 00:00:00  上交所 -1.20 -0.043243
...        ...   ...         ...    ...    ...    ...    ...    ...          ...           ...                  ...  ...   ...       ...
4577  sh600000  浦发银行  2019-03-29  10.98  11.30  10.98  11.28  11.03   60526266.0  6.784365e+08  2019-03-29 00:00:00  上交所  0.25  0.022665
4578  sh600000  浦发银行  2019-04-01  11.36  11.52  11.29  11.44  11.28   70637405.0  8.086575e+08  2019-04-01 00:00:00  上交所  0.16  0.014184
4579  sh600000  浦发银行  2019-04-02  11.50  11.52  11.41  11.44  11.44   46714710.0  5.348968e+08  2019-04-02 00:00:00  上交所  0.00  0.000000
4580  sh600000  浦发银行  2019-04-03  11.37  11.54  11.34  11.50  11.44   50271029.0  5.757994e+08  2019-04-03 00:00:00  上交所  0.06  0.005245
4581  sh600000  浦发银行  2019-04-04  11.55  11.71  11.54  11.71  11.50   75232527.0  8.760995e+08  2019-04-04 00:00:00  上交所  0.21  0.018261

[4582 rows x 14 columns]
            交易日期          成交量         累计成交量
0     1999-11-10  174085100.0  1.740851e+08
1     1999-11-11   29403500.0  2.034886e+08
2     1999-11-12   15008000.0  2.184966e+08
3     1999-11-15   11921100.0  2.304177e+08
4     1999-11-16   23223100.0  2.536408e+08
...          ...          ...           ...
4577  2019-03-29   60526266.0  2.605688e+11
4578  2019-04-01   70637405.0  2.606395e+11
4579  2019-04-02   46714710.0  2.606862e+11
4580  2019-04-03   50271029.0  2.607364e+11
4581  2019-04-04   75232527.0  2.608117e+11

[4582 rows x 3 columns]
0            NaN
1       0.998559
2       1.010811
3       1.000000
4       0.956757
          ...
4577    0.406486
4578    0.412252
4579    0.412252
4580    0.414414
4581    0.421982
Name: 涨跌幅, Length: 4582, dtype: float64
        收盘价  收盘价_排名
0     27.75  4300.5
1     27.71  4298.0
2     28.05  4307.0
3     27.75  4300.5
4     26.55  4272.0
...     ...     ...
4577  11.28  1834.5
4578  11.44  1860.5
4579  11.44  1860.5
4580  11.50  1872.5
4581  11.71  1915.0

[4582 rows x 2 columns]
9.74     16
9.19     13
10.00    13
10.05    13
16.40    12
         ..
50.20     1
16.77     1
18.90     1
30.59     1
16.74     1
Name: 收盘价, Length: 1823, dtype: int64
#+end_example

** 筛选数据
#+begin_src python :results output
import pandas as pd
pd.set_option('expand_frame_repr', False)

##导入数据
df =  pd.read_csv(
    filepath_or_buffer = r'/Users/pango/Projs/Quant/xbx_stock_2019_0420/data/a_stock_201903.csv',
    encoding = 'gbk',
)
print(df['股票代码'] == 'sh600000')
print(df[df['股票代码'] == 'sh600000'])
print(df[df['股票代码'] == 'sh600000'].index)
print(df[df['股票代码'].isin(['sh600000', 'sh600004', 'sz000001'])])
print(df[df['收盘价'] < 10.0])
print(df[(df['收盘价'] < 10.0) & (df['股票代码'] == 'sz300021')])
#+end_src

#+RESULTS:
#+begin_example
0         True
1         True
2         True
3         True
4         True
         ...
74959    False
74960    False
74961    False
74962    False
74963    False
Name: 股票代码, Length: 74964, dtype: bool
        股票代码  股票名称        交易日期    开盘价    最高价    最低价    收盘价   前收盘价         成交量           成交额
0   sh600000  浦发银行  2019-03-01  11.81  12.06  11.60  12.02  11.74  63254621.0  7.477533e+08
1   sh600000  浦发银行  2019-03-04  12.12  12.38  11.95  12.02  12.02  85024777.0  1.030562e+09
2   sh600000  浦发银行  2019-03-05  12.01  12.04  11.87  11.98  12.02  54564202.0  6.525522e+08
3   sh600000  浦发银行  2019-03-06  11.99  12.15  11.86  12.02  11.98  53693164.0  6.442430e+08
4   sh600000  浦发银行  2019-03-07  12.03  12.04  11.87  11.88  12.02  52618824.0  6.283909e+08
5   sh600000  浦发银行  2019-03-08  11.72  11.72  11.36  11.50  11.88  52670531.0  6.094906e+08
6   sh600000  浦发银行  2019-03-11  11.44  11.59  11.36  11.47  11.50  39922020.0  4.570565e+08
7   sh600000  浦发银行  2019-03-12  11.59  11.69  11.40  11.44  11.47  52211807.0  6.029407e+08
8   sh600000  浦发银行  2019-03-13  11.41  11.56  11.30  11.44  11.44  41373014.0  4.729748e+08
9   sh600000  浦发银行  2019-03-14  11.46  11.58  11.43  11.46  11.44  34337899.0  3.954685e+08
10  sh600000  浦发银行  2019-03-15  11.47  11.60  11.43  11.43  11.46  33769320.0  3.882445e+08
11  sh600000  浦发银行  2019-03-18  11.45  11.60  11.37  11.59  11.43  43879562.0  5.039152e+08
12  sh600000  浦发银行  2019-03-19  11.63  11.67  11.51  11.55  11.59  27500231.0  3.185215e+08
13  sh600000  浦发银行  2019-03-20  11.52  11.64  11.49  11.55  11.55  27325424.0  3.155872e+08
14  sh600000  浦发银行  2019-03-21  11.56  11.59  11.44  11.46  11.55  35037035.0  4.035732e+08
15  sh600000  浦发银行  2019-03-22  11.49  11.51  11.31  11.39  11.46  35436446.0  4.039728e+08
16  sh600000  浦发银行  2019-03-25  11.28  11.29  11.01  11.03  11.39  57716577.0  6.428601e+08
17  sh600000  浦发银行  2019-03-26  11.11  11.14  11.03  11.09  11.03  30795722.0  3.414253e+08
18  sh600000  浦发银行  2019-03-27  11.11  11.24  11.04  11.08  11.09  42124489.0  4.692463e+08
19  sh600000  浦发银行  2019-03-28  11.03  11.05  10.90  11.03  11.08  29296120.0  3.215859e+08
20  sh600000  浦发银行  2019-03-29  10.98  11.30  10.98  11.28  11.03  60526266.0  6.784365e+08
Int64Index([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
            19, 20],
           dtype='int64')
           股票代码  股票名称        交易日期    开盘价    最高价    最低价    收盘价   前收盘价          成交量           成交额
0      sh600000  浦发银行  2019-03-01  11.81  12.06  11.60  12.02  11.74   63254621.0  7.477533e+08
1      sh600000  浦发银行  2019-03-04  12.12  12.38  11.95  12.02  12.02   85024777.0  1.030562e+09
2      sh600000  浦发银行  2019-03-05  12.01  12.04  11.87  11.98  12.02   54564202.0  6.525522e+08
3      sh600000  浦发银行  2019-03-06  11.99  12.15  11.86  12.02  11.98   53693164.0  6.442430e+08
4      sh600000  浦发银行  2019-03-07  12.03  12.04  11.87  11.88  12.02   52618824.0  6.283909e+08
...         ...   ...         ...    ...    ...    ...    ...    ...          ...           ...
30422  sz000001  平安银行  2019-03-25  12.40  12.40  12.10  12.11  12.59  117988326.0  1.445560e+09
30423  sz000001  平安银行  2019-03-26  12.23  12.29  12.01  12.10  12.11   93539327.0  1.136721e+09
30424  sz000001  平安银行  2019-03-27  12.24  12.47  12.18  12.38  12.10   92282680.0  1.138303e+09
30425  sz000001  平安银行  2019-03-28  12.31  12.31  12.10  12.22  12.38   73246744.0  8.925306e+08
30426  sz000001  平安银行  2019-03-29  12.26  12.82  12.21  12.82  12.22  166950647.0  2.108295e+09

[63 rows x 10 columns]
           股票代码  股票名称        交易日期    开盘价    最高价   最低价   收盘价   前收盘价         成交量          成交额
42     sh600006  东风汽车  2019-03-01   4.36   4.41  4.26  4.35   4.36  16291473.0   70203952.0
43     sh600006  东风汽车  2019-03-04   4.37   4.47  4.33  4.38   4.35  24847536.0  109550020.0
44     sh600006  东风汽车  2019-03-05   4.38   4.44  4.35  4.44   4.38  15457883.0   68110973.0
45     sh600006  东风汽车  2019-03-06   4.38   4.69  4.38  4.63   4.44  36693688.0  167642608.0
46     sh600006  东风汽车  2019-03-07   4.51   4.65  4.51  4.63   4.63  25873375.0  119008575.0
...         ...   ...         ...    ...    ...   ...   ...    ...         ...          ...
74452  sz300737  科顺股份  2019-03-06   9.43   9.55  9.32  9.54   9.39   9014639.0   85259430.0
74453  sz300737  科顺股份  2019-03-07   9.58  10.02  9.48  9.91   9.54  13493555.0  132089402.0
74454  sz300737  科顺股份  2019-03-08   9.75  10.79  9.57  9.78   9.91  18798588.0  189780707.0
74457  sz300737  科顺股份  2019-03-13  10.39  10.40  9.88  9.99  10.29   8440621.0   85777210.0
74458  sz300737  科顺股份  2019-03-14   9.98  10.23  9.85  9.91   9.99   8995997.0   90414218.0

[37657 rows x 10 columns]
           股票代码  股票名称        交易日期   开盘价   最高价   最低价   收盘价  前收盘价         成交量          成交额
59799  sz300021  大禹节水  2019-03-01  5.88  5.93  5.80  5.86  5.90   8371350.0   48913852.0
59800  sz300021  大禹节水  2019-03-04  5.88  5.96  5.80  5.96  5.86  25027755.0  147242292.0
59801  sz300021  大禹节水  2019-03-05  5.98  6.09  5.89  6.02  5.96  20025439.0  119968660.0
59802  sz300021  大禹节水  2019-03-06  6.01  6.02  5.84  5.99  6.02  17613861.0  104576089.0
59803  sz300021  大禹节水  2019-03-07  5.97  5.98  5.80  5.94  5.99  17144248.0  101084620.0
59804  sz300021  大禹节水  2019-03-08  5.94  5.96  5.80  5.81  5.94  19116597.0  112254383.0
59805  sz300021  大禹节水  2019-03-11  5.84  6.06  5.83  6.02  5.81  19614034.0  117165125.0
59806  sz300021  大禹节水  2019-03-12  6.09  6.16  5.98  6.14  6.02  19423394.0  117753363.0
59807  sz300021  大禹节水  2019-03-13  6.14  6.17  5.98  5.99  6.14  11915650.0   72082695.0
59808  sz300021  大禹节水  2019-03-14  5.98  6.04  5.83  5.88  5.99  10467425.0   61863526.0
59809  sz300021  大禹节水  2019-03-15  5.92  5.99  5.89  5.92  5.88   6829560.0   40570115.0
59810  sz300021  大禹节水  2019-03-18  5.97  6.22  5.89  6.20  5.92  14632952.0   89606805.0
59811  sz300021  大禹节水  2019-03-19  6.25  6.25  6.06  6.09  6.20   8961759.0   54822125.0
59812  sz300021  大禹节水  2019-03-20  6.10  6.15  6.02  6.11  6.09   6764187.0   41182780.0
59813  sz300021  大禹节水  2019-03-21  6.13  6.48  6.09  6.48  6.11  19615806.0  124741151.0
59814  sz300021  大禹节水  2019-03-22  6.44  6.50  6.30  6.39  6.48  10426780.0   66562791.0
59815  sz300021  大禹节水  2019-03-25  6.31  6.80  6.22  6.59  6.39  19311268.0  127210861.0
59816  sz300021  大禹节水  2019-03-26  6.68  6.83  6.30  6.31  6.59  17621948.0  114793708.0
59817  sz300021  大禹节水  2019-03-27  6.42  6.48  6.17  6.24  6.31   9055949.0   56494828.0
59818  sz300021  大禹节水  2019-03-28  6.31  6.38  6.23  6.24  6.24   5750478.0   36185687.0
59819  sz300021  大禹节水  2019-03-29  6.28  6.48  6.19  6.47  6.24   9246946.0   58961424.0
#+end_example
** 空缺值处理: 排序，合并，去重
#+begin_src python :results output 数据
import pandas as pd
pd.set_option('expand_frame_repr', False)
df =  pd.read_csv(
    filepath_or_buffer = r'/Users/pango/Projs/Quant/xbx_stock_2019_0420/data/a_stock_201903.csv',
    encoding = 'gbk',
)

# 缺失值处理
# 创建缺失值
print(df['交易日期'])
index  = df[df['交易日期'].isin(['2019-03-01', '2019-03-15'])].index
print(index)
df.loc[index, '月头'] = df['交易日期'] #有很多空值
print(df)

# 1.删除缺失值
# print(df.dropna(how='any')) #将带有空之的行删除
# print(df.dropna(subset=['月头', '收盘价'], how='any')) #all 代表全部为空，any 只要一个为空就删除
# print(df.dropna(subset=['月头', '收盘价'], how='all'))

# 2.补全缺失值
# print(df.fillna(value='N')) #填充 0
# df['月头'].fillna(value=df['收盘价'], inplace = True) # 用收盘价来填充空之
# print(df)
# print(df.fillna(method='ffill')) # forward fill 向上寻找最近的一个非空值，以该值来填充
# print(df.fillna(method='bfill')) # backward fill 向下寻找最近的一个非空值，以该值来进行填充

# 3.找出缺失值
print(df.notnull()) #判断是否为空值，返回 true false
print(df.isnull()) #相反
print(df[df['月头'].notnull()]) # 将'月头'列为空的行输出
#+end_src

#+RESULTS:
#+begin_example
0        2019-03-01
1        2019-03-04
2        2019-03-05
3        2019-03-06
4        2019-03-07
            ...
74959    2019-03-26
74960    2019-03-27
74961    2019-03-28
74962    2019-03-29
74963    2019-03-29
Name: 交易日期, Length: 74964, dtype: object
Int64Index([    0,    10,    21,    31,    42,    52,    63,    73,    84,
               94,
            ...
            74836, 74847, 74857, 74868, 74878, 74889, 74899, 74910, 74920,
            74932],
           dtype='int64', length=7147)
           股票代码  股票名称        交易日期    开盘价    最高价    最低价    收盘价   前收盘价         成交量           成交额          月头
0      sh600000  浦发银行  2019-03-01  11.81  12.06  11.60  12.02  11.74  63254621.0  7.477533e+08  2019-03-01
1      sh600000  浦发银行  2019-03-04  12.12  12.38  11.95  12.02  12.02  85024777.0  1.030562e+09         NaN
2      sh600000  浦发银行  2019-03-05  12.01  12.04  11.87  11.98  12.02  54564202.0  6.525522e+08         NaN
3      sh600000  浦发银行  2019-03-06  11.99  12.15  11.86  12.02  11.98  53693164.0  6.442430e+08         NaN
4      sh600000  浦发银行  2019-03-07  12.03  12.04  11.87  11.88  12.02  52618824.0  6.283909e+08         NaN
...         ...   ...         ...    ...    ...    ...    ...    ...         ...           ...         ...
74959  sz300766  每日互动  2019-03-26  20.72  20.72  20.72  20.72  18.84      8426.0  1.745860e+05         NaN
74960  sz300766  每日互动  2019-03-27  22.79  22.79  22.79  22.79  20.72      8795.0  2.004380e+05         NaN
74961  sz300766  每日互动  2019-03-28  25.07  25.07  25.07  25.07  22.79     11479.0  2.877780e+05         NaN
74962  sz300766  每日互动  2019-03-29  27.58  27.58  27.58  27.58  25.07     32662.0  9.008170e+05         NaN
74963  sz300767  震安科技  2019-03-29  23.03  27.63  23.03  27.63  19.19      9700.0  2.664010e+05         NaN

[74964 rows x 11 columns]
       股票代码  股票名称  交易日期   开盘价   最高价   最低价   收盘价  前收盘价   成交量   成交额     月头
0      True  True  True  True  True  True  True  True  True  True   True
1      True  True  True  True  True  True  True  True  True  True  False
2      True  True  True  True  True  True  True  True  True  True  False
3      True  True  True  True  True  True  True  True  True  True  False
4      True  True  True  True  True  True  True  True  True  True  False
...     ...   ...   ...   ...   ...   ...   ...   ...   ...   ...    ...
74959  True  True  True  True  True  True  True  True  True  True  False
74960  True  True  True  True  True  True  True  True  True  True  False
74961  True  True  True  True  True  True  True  True  True  True  False
74962  True  True  True  True  True  True  True  True  True  True  False
74963  True  True  True  True  True  True  True  True  True  True  False

[74964 rows x 11 columns]
        股票代码   股票名称   交易日期    开盘价    最高价    最低价    收盘价   前收盘价    成交量    成交额     月头
0      False  False  False  False  False  False  False  False  False  False  False
1      False  False  False  False  False  False  False  False  False  False   True
2      False  False  False  False  False  False  False  False  False  False   True
3      False  False  False  False  False  False  False  False  False  False   True
4      False  False  False  False  False  False  False  False  False  False   True
...      ...    ...    ...    ...    ...    ...    ...    ...    ...    ...    ...
74959  False  False  False  False  False  False  False  False  False  False   True
74960  False  False  False  False  False  False  False  False  False  False   True
74961  False  False  False  False  False  False  False  False  False  False   True
74962  False  False  False  False  False  False  False  False  False  False   True
74963  False  False  False  False  False  False  False  False  False  False   True

[74964 rows x 11 columns]
           股票代码  股票名称        交易日期     开盘价     最高价     最低价     收盘价    前收盘价         成交量           成交额          月头
0      sh600000  浦发银行  2019-03-01   11.81   12.06   11.60   12.02   11.74  63254621.0  7.477533e+08  2019-03-01
10     sh600000  浦发银行  2019-03-15   11.47   11.60   11.43   11.43   11.46  33769320.0  3.882445e+08  2019-03-15
21     sh600004  白云机场  2019-03-01   12.44   13.17   12.36   13.15   12.32  29721436.0  3.805480e+08  2019-03-01
31     sh600004  白云机场  2019-03-15   13.33   13.46   13.09   13.30   13.17  11160652.0  1.486232e+08  2019-03-15
42     sh600006  东风汽车  2019-03-01    4.36    4.41    4.26    4.35    4.36  16291473.0  7.020395e+07  2019-03-01
...         ...   ...         ...     ...     ...     ...     ...     ...         ...           ...         ...
74889  sz300760  迈瑞医疗  2019-03-01  129.00  131.00  124.81  128.39  127.30   5811638.0  7.446308e+08  2019-03-01
74899  sz300760  迈瑞医疗  2019-03-15  131.20  138.88  131.20  135.30  130.45   5391508.0  7.352895e+08  2019-03-15
74910  sz300761  立华股份  2019-03-01   80.00   85.89   80.00   85.89   78.08  15485401.0  1.284312e+09  2019-03-01
74920  sz300761  立华股份  2019-03-15   78.80   79.50   74.00   75.18   78.63   9927555.0  7.600653e+08  2019-03-15
74932  sz300762  上海瀚讯  2019-03-15   25.78   25.78   25.78   25.78   23.44      5641.0  1.454240e+05  2019-03-15

[7147 rows x 11 columns]
#+end_example

** 数据整理
#+begin_src python :results output
import pandas as pd
pd.set_option('expand_frame_repr', False)

##导入数据
df =  pd.read_csv(
    filepath_or_buffer = r'/Users/pango/Projs/Quant/xbx_stock_2019_0420/data/a_stock_201903.csv',
    encoding = 'gbk',
)

print(df)
print(df.sort_values(by=['交易日期'], ascending=0)) # 1表示顺序 0表示逆序
print(df.sort_values(by=['股票代码','交易日期'], ascending=[0,0]))

#append 操作
df1 = df.iloc[0:10][['交易日期', '股票代码', '收盘价', '成交量']]
print(df1)

df2 = df.iloc[5:15][['交易日期', '股票代码', '收盘价', '成交量']] #如果少列数，用NaN填充？
print(df2)

df3 = df1.append(df2) #这样操作有重复
print(df3)

df4 = df1.append(df2, ignore_index=True) # 如果df2少两列，sort=False查询
print(df4)

#对数据去重
# 对df3驱虫
df3.drop_duplicates(
    subset=['交易日期', '股票代码'], #subset参数用来指定哪类数据需要驱虫
    keep='first', #去除重复值的时候，保留上一行还是下面一行， first, last, False(都删掉)
    inplace=True # 针对数据本身进行操作，并不会得到返回值
)

# 其他常用函数
df.reset_index(inplace=True, drop=False) #重置index, drop = True,不希望保留原来的index列
print(df)
print(df.rename(columns={'收盘价':'close', '开盘价':'open', '股票代码':'code'}, inplace=True))  #rename, 同样可以进行inplace=True
#df = pd.DataFrame()
#print(df.empty) #判断df是不是空， 这里返回False
#print(pd.DataFrame().empty) # pd.DataFrame()创建一个空的DataFrame, 此处输出True
#print(df.T)
#+end_src

#+RESULTS:
#+begin_example
           股票代码  股票名称        交易日期    开盘价    最高价    最低价    收盘价   前收盘价         成交量           成交额
0      sh600000  浦发银行  2019-03-01  11.81  12.06  11.60  12.02  11.74  63254621.0  7.477533e+08
1      sh600000  浦发银行  2019-03-04  12.12  12.38  11.95  12.02  12.02  85024777.0  1.030562e+09
2      sh600000  浦发银行  2019-03-05  12.01  12.04  11.87  11.98  12.02  54564202.0  6.525522e+08
3      sh600000  浦发银行  2019-03-06  11.99  12.15  11.86  12.02  11.98  53693164.0  6.442430e+08
4      sh600000  浦发银行  2019-03-07  12.03  12.04  11.87  11.88  12.02  52618824.0  6.283909e+08
...         ...   ...         ...    ...    ...    ...    ...    ...         ...           ...
74959  sz300766  每日互动  2019-03-26  20.72  20.72  20.72  20.72  18.84      8426.0  1.745860e+05
74960  sz300766  每日互动  2019-03-27  22.79  22.79  22.79  22.79  20.72      8795.0  2.004380e+05
74961  sz300766  每日互动  2019-03-28  25.07  25.07  25.07  25.07  22.79     11479.0  2.877780e+05
74962  sz300766  每日互动  2019-03-29  27.58  27.58  27.58  27.58  25.07     32662.0  9.008170e+05
74963  sz300767  震安科技  2019-03-29  23.03  27.63  23.03  27.63  19.19      9700.0  2.664010e+05

[74964 rows x 10 columns]
           股票代码  股票名称        交易日期    开盘价    最高价    最低价    收盘价   前收盘价         成交量          成交额
74963  sz300767  震安科技  2019-03-29  23.03  27.63  23.03  27.63  19.19      9700.0     266401.0
59924  sz300026  红日药业  2019-03-29   3.49   3.64   3.46   3.62   3.49  48448923.0  172861644.0
3348   sh600193  ST创兴  2019-03-29   3.84   3.89   3.70   3.83   3.89  10440879.0   39638345.0
59882  sz300024   机器人  2019-03-29  18.40  19.20  18.33  19.10  18.33  26233109.0  494002691.0
8891   sh600529  山东药玻  2019-03-29  25.30  25.58  24.78  25.50  25.39   6161019.0  154840261.0
...         ...   ...         ...    ...    ...    ...    ...    ...         ...          ...
6782   sh600388  龙净环保  2019-03-01  12.62  12.70  12.39  12.55  12.62  10206964.0  127409507.0
44478  sz002215   诺普信  2019-03-01   6.24   6.27   6.18   6.24   6.24  10961770.0   68197509.0
44499  sz002216  三全食品  2019-03-01   7.55   7.86   7.47   7.86   7.55   8934632.0   68847000.0
44520  sz002217   合力泰  2019-03-01   7.36   7.39   7.11   7.21   7.32  85322953.0  614555173.0
0      sh600000  浦发银行  2019-03-01  11.81  12.06  11.60  12.02  11.74  63254621.0  747753342.0

[74964 rows x 10 columns]
           股票代码  股票名称        交易日期    开盘价    最高价    最低价    收盘价   前收盘价         成交量           成交额
74963  sz300767  震安科技  2019-03-29  23.03  27.63  23.03  27.63  19.19      9700.0  2.664010e+05
74962  sz300766  每日互动  2019-03-29  27.58  27.58  27.58  27.58  25.07     32662.0  9.008170e+05
74961  sz300766  每日互动  2019-03-28  25.07  25.07  25.07  25.07  22.79     11479.0  2.877780e+05
74960  sz300766  每日互动  2019-03-27  22.79  22.79  22.79  22.79  20.72      8795.0  2.004380e+05
74959  sz300766  每日互动  2019-03-26  20.72  20.72  20.72  20.72  18.84      8426.0  1.745860e+05
...         ...   ...         ...    ...    ...    ...    ...    ...         ...           ...
4      sh600000  浦发银行  2019-03-07  12.03  12.04  11.87  11.88  12.02  52618824.0  6.283909e+08
3      sh600000  浦发银行  2019-03-06  11.99  12.15  11.86  12.02  11.98  53693164.0  6.442430e+08
2      sh600000  浦发银行  2019-03-05  12.01  12.04  11.87  11.98  12.02  54564202.0  6.525522e+08
1      sh600000  浦发银行  2019-03-04  12.12  12.38  11.95  12.02  12.02  85024777.0  1.030562e+09
0      sh600000  浦发银行  2019-03-01  11.81  12.06  11.60  12.02  11.74  63254621.0  7.477533e+08

[74964 rows x 10 columns]
         交易日期      股票代码    收盘价         成交量
0  2019-03-01  sh600000  12.02  63254621.0
1  2019-03-04  sh600000  12.02  85024777.0
2  2019-03-05  sh600000  11.98  54564202.0
3  2019-03-06  sh600000  12.02  53693164.0
4  2019-03-07  sh600000  11.88  52618824.0
5  2019-03-08  sh600000  11.50  52670531.0
6  2019-03-11  sh600000  11.47  39922020.0
7  2019-03-12  sh600000  11.44  52211807.0
8  2019-03-13  sh600000  11.44  41373014.0
9  2019-03-14  sh600000  11.46  34337899.0
          交易日期      股票代码    收盘价         成交量
5   2019-03-08  sh600000  11.50  52670531.0
6   2019-03-11  sh600000  11.47  39922020.0
7   2019-03-12  sh600000  11.44  52211807.0
8   2019-03-13  sh600000  11.44  41373014.0
9   2019-03-14  sh600000  11.46  34337899.0
10  2019-03-15  sh600000  11.43  33769320.0
11  2019-03-18  sh600000  11.59  43879562.0
12  2019-03-19  sh600000  11.55  27500231.0
13  2019-03-20  sh600000  11.55  27325424.0
14  2019-03-21  sh600000  11.46  35037035.0
          交易日期      股票代码    收盘价         成交量
0   2019-03-01  sh600000  12.02  63254621.0
1   2019-03-04  sh600000  12.02  85024777.0
2   2019-03-05  sh600000  11.98  54564202.0
3   2019-03-06  sh600000  12.02  53693164.0
4   2019-03-07  sh600000  11.88  52618824.0
5   2019-03-08  sh600000  11.50  52670531.0
6   2019-03-11  sh600000  11.47  39922020.0
7   2019-03-12  sh600000  11.44  52211807.0
8   2019-03-13  sh600000  11.44  41373014.0
9   2019-03-14  sh600000  11.46  34337899.0
5   2019-03-08  sh600000  11.50  52670531.0
6   2019-03-11  sh600000  11.47  39922020.0
7   2019-03-12  sh600000  11.44  52211807.0
8   2019-03-13  sh600000  11.44  41373014.0
9   2019-03-14  sh600000  11.46  34337899.0
10  2019-03-15  sh600000  11.43  33769320.0
11  2019-03-18  sh600000  11.59  43879562.0
12  2019-03-19  sh600000  11.55  27500231.0
13  2019-03-20  sh600000  11.55  27325424.0
14  2019-03-21  sh600000  11.46  35037035.0
          交易日期      股票代码    收盘价         成交量
0   2019-03-01  sh600000  12.02  63254621.0
1   2019-03-04  sh600000  12.02  85024777.0
2   2019-03-05  sh600000  11.98  54564202.0
3   2019-03-06  sh600000  12.02  53693164.0
4   2019-03-07  sh600000  11.88  52618824.0
5   2019-03-08  sh600000  11.50  52670531.0
6   2019-03-11  sh600000  11.47  39922020.0
7   2019-03-12  sh600000  11.44  52211807.0
8   2019-03-13  sh600000  11.44  41373014.0
9   2019-03-14  sh600000  11.46  34337899.0
10  2019-03-08  sh600000  11.50  52670531.0
11  2019-03-11  sh600000  11.47  39922020.0
12  2019-03-12  sh600000  11.44  52211807.0
13  2019-03-13  sh600000  11.44  41373014.0
14  2019-03-14  sh600000  11.46  34337899.0
15  2019-03-15  sh600000  11.43  33769320.0
16  2019-03-18  sh600000  11.59  43879562.0
17  2019-03-19  sh600000  11.55  27500231.0
18  2019-03-20  sh600000  11.55  27325424.0
19  2019-03-21  sh600000  11.46  35037035.0
       index      股票代码  股票名称        交易日期    开盘价    最高价    最低价    收盘价   前收盘价         成交量           成交额
0          0  sh600000  浦发银行  2019-03-01  11.81  12.06  11.60  12.02  11.74  63254621.0  7.477533e+08
1          1  sh600000  浦发银行  2019-03-04  12.12  12.38  11.95  12.02  12.02  85024777.0  1.030562e+09
2          2  sh600000  浦发银行  2019-03-05  12.01  12.04  11.87  11.98  12.02  54564202.0  6.525522e+08
3          3  sh600000  浦发银行  2019-03-06  11.99  12.15  11.86  12.02  11.98  53693164.0  6.442430e+08
4          4  sh600000  浦发银行  2019-03-07  12.03  12.04  11.87  11.88  12.02  52618824.0  6.283909e+08
...      ...       ...   ...         ...    ...    ...    ...    ...    ...         ...           ...
74959  74959  sz300766  每日互动  2019-03-26  20.72  20.72  20.72  20.72  18.84      8426.0  1.745860e+05
74960  74960  sz300766  每日互动  2019-03-27  22.79  22.79  22.79  22.79  20.72      8795.0  2.004380e+05
74961  74961  sz300766  每日互动  2019-03-28  25.07  25.07  25.07  25.07  22.79     11479.0  2.877780e+05
74962  74962  sz300766  每日互动  2019-03-29  27.58  27.58  27.58  27.58  25.07     32662.0  9.008170e+05
74963  74963  sz300767  震安科技  2019-03-29  23.03  27.63  23.03  27.63  19.19      9700.0  2.664010e+05

[74964 rows x 11 columns]
None
             0             1            2            3            4            5            6            7            8            9            10           11           12           13           14           15           16           17           18           19           20           21           22           23           24           25           26           27           28           29           30           31           32           33           34           35           36           37           38           39     ...        74924        74925        74926        74927        74928        74929        74930       74931       74932       74933       74934       74935       74936       74937       74938       74939       74940       74941       74942       74943       74944       74945       74946       74947       74948       74949        74950        74951       74952       74953       74954       74955       74956         74957       74958       74959       74960       74961       74962       74963
index            0             1            2            3            4            5            6            7            8            9           10           11           12           13           14           15           16           17           18           19           20           21           22           23           24           25           26           27           28           29           30           31           32           33           34           35           36           37           38           39  ...        74924        74925        74926        74927        74928        74929        74930       74931       74932       74933       74934       74935       74936       74937       74938       74939       74940       74941       74942       74943       74944       74945       74946       74947       74948       74949        74950        74951       74952       74953       74954       74955       74956         74957       74958       74959       74960       74961       74962       74963
code      sh600000      sh600000     sh600000     sh600000     sh600000     sh600000     sh600000     sh600000     sh600000     sh600000     sh600000     sh600000     sh600000     sh600000     sh600000     sh600000     sh600000     sh600000     sh600000     sh600000     sh600000     sh600004     sh600004     sh600004     sh600004     sh600004     sh600004     sh600004     sh600004     sh600004     sh600004     sh600004     sh600004     sh600004     sh600004     sh600004     sh600004     sh600004     sh600004     sh600004  ...     sz300761     sz300761     sz300761     sz300761     sz300761     sz300761     sz300761    sz300762    sz300762    sz300762    sz300762    sz300762    sz300762    sz300762    sz300762    sz300762    sz300762    sz300762    sz300762    sz300763    sz300763    sz300763    sz300763    sz300763    sz300763    sz300763     sz300763     sz300763    sz300765    sz300765    sz300765    sz300765    sz300765      sz300765    sz300766    sz300766    sz300766    sz300766    sz300766    sz300767
股票名称          浦发银行          浦发银行         浦发银行         浦发银行         浦发银行         浦发银行         浦发银行         浦发银行         浦发银行         浦发银行         浦发银行         浦发银行         浦发银行         浦发银行         浦发银行         浦发银行         浦发银行         浦发银行         浦发银行         浦发银行         浦发银行         白云机场         白云机场         白云机场         白云机场         白云机场         白云机场         白云机场         白云机场         白云机场         白云机场         白云机场         白云机场         白云机场         白云机场         白云机场         白云机场         白云机场         白云机场         白云机场  ...         立华股份         立华股份         立华股份         立华股份         立华股份         立华股份         立华股份        上海瀚讯        上海瀚讯        上海瀚讯        上海瀚讯        上海瀚讯        上海瀚讯        上海瀚讯        上海瀚讯        上海瀚讯        上海瀚讯        上海瀚讯        上海瀚讯        锦浪科技        锦浪科技        锦浪科技        锦浪科技        锦浪科技        锦浪科技        锦浪科技         锦浪科技         锦浪科技         新诺威         新诺威         新诺威         新诺威         新诺威           新诺威        每日互动        每日互动        每日互动        每日互动        每日互动        震安科技
交易日期    2019-03-01    2019-03-04   2019-03-05   2019-03-06   2019-03-07   2019-03-08   2019-03-11   2019-03-12   2019-03-13   2019-03-14   2019-03-15   2019-03-18   2019-03-19   2019-03-20   2019-03-21   2019-03-22   2019-03-25   2019-03-26   2019-03-27   2019-03-28   2019-03-29   2019-03-01   2019-03-04   2019-03-05   2019-03-06   2019-03-07   2019-03-08   2019-03-11   2019-03-12   2019-03-13   2019-03-14   2019-03-15   2019-03-18   2019-03-19   2019-03-20   2019-03-21   2019-03-22   2019-03-25   2019-03-26   2019-03-27  ...   2019-03-21   2019-03-22   2019-03-25   2019-03-26   2019-03-27   2019-03-28   2019-03-29  2019-03-14  2019-03-15  2019-03-18  2019-03-19  2019-03-20  2019-03-21  2019-03-22  2019-03-25  2019-03-26  2019-03-27  2019-03-28  2019-03-29  2019-03-19  2019-03-20  2019-03-21  2019-03-22  2019-03-25  2019-03-26  2019-03-27   2019-03-28   2019-03-29  2019-03-22  2019-03-25  2019-03-26  2019-03-27  2019-03-28    2019-03-29  2019-03-25  2019-03-26  2019-03-27  2019-03-28  2019-03-29  2019-03-29
open         11.81         12.12        12.01        11.99        12.03        11.72        11.44        11.59        11.41        11.46        11.47        11.45        11.63        11.52        11.56        11.49        11.28        11.11        11.11        11.03        10.98        12.44        13.15        13.49        13.42        13.49         13.0        13.05        13.53        13.26         13.4        13.33        13.32        14.16        13.99        14.11         14.4        14.69        14.41        14.51  ...        74.61        74.65         71.9        73.19        75.06        69.17        68.48       19.54       25.78       28.36        31.2       34.32       37.75       41.53       45.68       50.25       55.28       60.81       66.89       31.97        42.2       46.42       51.06       56.17       61.79       67.97        74.77         67.2       29.36       38.76       42.64        46.9       51.59         56.75        15.7       20.72       22.79       25.07       27.58       23.03
最高价          12.06         12.38        12.04        12.15        12.04        11.72        11.59        11.69        11.56        11.58         11.6         11.6        11.67        11.64        11.59        11.51        11.29        11.14        11.24        11.05         11.3        13.17        14.06        13.58        13.59        13.53        13.15        13.55        13.56         13.7        13.58        13.46        14.26        14.37        14.12        14.65         15.0        15.05         14.8        14.98  ...        76.98        74.99        73.47        75.66         75.3         70.3        71.18       23.44       25.78       28.36        31.2       34.32       37.75       41.53       45.68       50.25       55.28       60.81       66.89       38.36        42.2       46.42       51.06       56.17       61.79       67.97        74.77         67.9       35.24       38.76       42.64        46.9       51.59         56.75       18.84       20.72       22.79       25.07       27.58       27.63
最低价           11.6         11.95        11.87        11.86        11.87        11.36        11.36         11.4         11.3        11.43        11.43        11.37        11.51        11.49        11.44        11.31        11.01        11.03        11.04         10.9        10.98        12.36        13.01        13.26        13.15        13.08        12.69        13.02         13.2        13.23         13.0        13.09         13.3        13.94         13.8        13.99        14.31        14.35        14.31        14.48  ...         73.8         73.2         71.2        73.19        69.63        68.27        68.42       19.54       25.78       28.36        31.2       34.32       37.75       41.53       45.68       50.25       55.28       60.81       66.89       31.97        42.2       46.42       51.06       56.17       61.79       67.97         70.0        64.45       29.36       38.76       42.64        46.9       51.59          51.7        15.7       20.72       22.79       25.07       27.58       23.03
close        12.02         12.02        11.98        12.02        11.88         11.5        11.47        11.44        11.44        11.46        11.43        11.59        11.55        11.55        11.46        11.39        11.03        11.09        11.08        11.03        11.28        13.15         13.6        13.44        13.49        13.18        13.01        13.31         13.3         13.3        13.17         13.3        14.15        13.99        14.07        14.43        14.89        14.48        14.48         14.6  ...        75.55        73.97        72.65        74.62         70.0        68.27        70.14       23.44       25.78       28.36        31.2       34.32       37.75       41.53       45.68       50.25       55.28       60.81       66.89       38.36        42.2       46.42       51.06       56.17       61.79       67.97        70.28        66.92       35.24       38.76       42.64        46.9       51.59         52.99       18.84       20.72       22.79       25.07       27.58       27.63
前收盘价         11.74         12.02        12.02        11.98        12.02        11.88         11.5        11.47        11.44        11.44        11.46        11.43        11.59        11.55        11.55        11.46        11.39        11.03        11.09        11.08        11.03        12.32        13.15         13.6        13.44        13.49        13.18        13.01        13.31         13.3         13.3        13.17         13.3        14.15        13.99        14.07        14.43        14.89        14.48        14.48  ...        74.79        75.55        73.97        72.65        74.62         70.0        68.27       16.28       23.44       25.78       28.36        31.2       34.32       37.75       41.53       45.68       50.25       55.28       60.81       26.64       38.36        42.2       46.42       51.06       56.17       61.79        67.97        70.28       24.47       35.24       38.76       42.64        46.9         51.59       13.08       18.84       20.72       22.79       25.07       19.19
成交量     63254621.0    85024777.0   54564202.0   53693164.0   52618824.0   52670531.0   39922020.0   52211807.0   41373014.0   34337899.0   33769320.0   43879562.0   27500231.0   27325424.0   35037035.0   35436446.0   57716577.0   30795722.0   42124489.0   29296120.0   60526266.0   29721436.0   34987320.0   20187022.0   21216972.0   18760929.0   21787807.0   20152779.0   21198320.0   20256809.0   12832469.0   11160652.0   24500463.0   16716347.0   13541853.0   25252115.0   22007997.0   15508274.0   14259221.0   14686692.0  ...    6829992.0    4900467.0    3940009.0    7713603.0    8384749.0    4511750.0    5327852.0     14400.0      5641.0     11953.0     12251.0     16050.0     31342.0     50650.0     78027.0     96984.0    102703.0    186571.0    360586.0      9612.0      2700.0      4285.0     24426.0     45100.0     76900.0    131028.0   11463821.0    7199878.0     40922.0     11300.0     23242.0     80215.0    147132.0    25008188.0     23144.0      8426.0      8795.0     11479.0     32662.0      9700.0
成交额    747753342.0  1030561509.0  652552200.0  644243050.0  628390863.0  609490591.0  457056506.0  602940683.0  472974759.0  395468492.0  388244487.0  503915219.0  318521475.0  315587208.0  403573243.0  403972783.0  642860108.0  341425280.0  469246326.0  321585861.0  678436536.0  380547995.0  475699785.0  270809752.0  283441565.0  249424773.0  282180582.0  268719342.0  283446977.0  273687713.0  170873614.0  148623173.0  340237585.0  234994739.0  189087643.0  362639187.0  324663261.0  227072450.0  207243437.0  215971514.0  ...  512753808.0  362660787.0  285992360.0  578067902.0  599437288.0  312587498.0  373061654.0    336915.0    145424.0    338987.0    382231.0    550836.0   1183160.0   2103494.0   3564273.0   4873446.0   5677421.0  11345382.0  24119597.0    363287.0    113940.0    198909.0   1247191.0   2533267.0   4751651.0   8905973.0  819629694.0  479316209.0   1437133.0    437988.0    991038.0   3762083.0   7590539.0  1336483786.0    431261.0    174586.0    200438.0    287778.0    900817.0    266401.0

[11 rows x 74964 columns]
#+end_example

#+begin_src python :results output
import pandas as pd
pd.set_option('expand_frame_repr', False)

##导入数据
df =  pd.read_csv(
    filepath_or_buffer = r'/Users/pango/Projs/Quant/xbx_stock_2019_0420/data/a_stock_201903.csv',
    encoding = 'gbk',
)

print(df.iloc[5:15][['交易日期', '开盘价', '收盘价']])
#+end_src

#+RESULTS:
#+begin_example
          交易日期    开盘价    收盘价
5   2019-03-08  11.72  11.50
6   2019-03-11  11.44  11.47
7   2019-03-12  11.59  11.44
8   2019-03-13  11.41  11.44
9   2019-03-14  11.46  11.46
10  2019-03-15  11.47  11.43
11  2019-03-18  11.45  11.59
12  2019-03-19  11.63  11.55
13  2019-03-20  11.52  11.55
14  2019-03-21  11.56  11.46
#+end_example
** 字符串操作
#+begin_src python :results output
import pandas as pd
pd.set_option('expand_frame_repr', False)

##导入数据
df =  pd.read_csv(
    filepath_or_buffer = r'/Users/pango/Projs/Quant/xbx_stock_2019_0420/data/a_stock_201903.csv',
    encoding = 'gbk',
)


# 字符串处理
print(df['股票代码'])
print('sh600000'[:2])
print(df['股票代码'].str[:2])
print(df['股票代码'].str.upper())
print(df['股票代码'].str.lower())
print(df['股票代码'].str.len())
print(df['股票代码'].str.strip()) #去掉字符串两边括号
print(df['股票代码'].str.contains('sh')) #判断字符串中是否包含特定字符
print(df['股票代码'].str.replace('sz', 'sh')) #进行替换，将sz替换成sh

#+end_src
更多字符串请见, http://pandas.pydata.org/pandas-docs/stable/text.html
#+RESULTS:
#+begin_example
0        sh600000
1        sh600000
2        sh600000
3        sh600000
4        sh600000
           ...
74959    sz300766
74960    sz300766
74961    sz300766
74962    sz300766
74963    sz300767
Name: 股票代码, Length: 74964, dtype: object
sh
0        sh
1        sh
2        sh
3        sh
4        sh
         ..
74959    sz
74960    sz
74961    sz
74962    sz
74963    sz
Name: 股票代码, Length: 74964, dtype: object
0        SH600000
1        SH600000
2        SH600000
3        SH600000
4        SH600000
           ...
74959    SZ300766
74960    SZ300766
74961    SZ300766
74962    SZ300766
74963    SZ300767
Name: 股票代码, Length: 74964, dtype: object
0        sh600000
1        sh600000
2        sh600000
3        sh600000
4        sh600000
           ...
74959    sz300766
74960    sz300766
74961    sz300766
74962    sz300766
74963    sz300767
Name: 股票代码, Length: 74964, dtype: object
0        8
1        8
2        8
3        8
4        8
        ..
74959    8
74960    8
74961    8
74962    8
74963    8
Name: 股票代码, Length: 74964, dtype: int64
0        sh600000
1        sh600000
2        sh600000
3        sh600000
4        sh600000
           ...
74959    sz300766
74960    sz300766
74961    sz300766
74962    sz300766
74963    sz300767
Name: 股票代码, Length: 74964, dtype: object
0         True
1         True
2         True
3         True
4         True
         ...
74959    False
74960    False
74961    False
74962    False
74963    False
Name: 股票代码, Length: 74964, dtype: bool
0        sh600000
1        sh600000
2        sh600000
3        sh600000
4        sh600000
           ...
74959    sh300766
74960    sh300766
74961    sh300766
74962    sh300766
74963    sh300767
Name: 股票代码, Length: 74964, dtype: object
#+end_example

** TODO 时间处理
#+begin_src python :results output
import pandas as pd
pd.set_option('expand_frame_repr', False)

##导入数据
df =  pd.read_csv(
    filepath_or_buffer = r'/Users/pango/Projs/Quant/xbx_stock_2019_0420/data/a_stock_201903.csv',
    encoding = 'gbk',
)

#时间处理
print(df['交易日期'])
print(df.at[0,'交易日期']) #字符串类型
print(type(df.at[0,'交易日期']))

df['交易日期'] = pd.to_datetime(df['交易日期'])
print(df.at[0,'交易日期'])
print(type(df.at[0,'交易日期'])) #补全了时间日期，timestamp的类型


print(pd.to_datetime('1999-1-11'))
print(pd.to_datetime('19990101'))
print(pd.to_datetime('1999/01/01')) #例如1999年1月1日无法处理
print(df['交易日期']) #datetime类型
print(df['交易日期'].dt.year)
print(df['交易日期'].dt.week)
print(df['交易日期'].dt.dayofyear)
print(df['交易日期'].dt.dayofweek)
print(df['交易日期'].dt.weekday) #一周中第几天, 目前weekday_name无法使用
print(df['交易日期'].dt.days_in_month) #这一天所在月份有多少天 /如何查询假期/
print(df['交易日期'].dt.is_month_start)  #这一天是否是该月的开头
print(df['交易日期'].dt.is_month_end)
print(df['交易日期'] + pd.Timedelta(days=1)) # 时间差值增加一天, hours=1, days=2, minutes=15
print((df['交易日期'] + pd.Timedelta(days=1)) - df['交易日期']) # 差值为一天，数据类型是timedelta, 本质上并不是str
#+end_src

#+RESULTS:
#+begin_example
0        2019-03-01
1        2019-03-04
2        2019-03-05
3        2019-03-06
4        2019-03-07
            ...
74959    2019-03-26
74960    2019-03-27
74961    2019-03-28
74962    2019-03-29
74963    2019-03-29
Name: 交易日期, Length: 74964, dtype: object
2019-03-01
<class 'str'>
2019-03-01 00:00:00
<class 'pandas._libs.tslibs.timestamps.Timestamp'>
1999-01-11 00:00:00
1999-01-01 00:00:00
1999-01-01 00:00:00
0       2019-03-01
1       2019-03-04
2       2019-03-05
3       2019-03-06
4       2019-03-07
           ...
74959   2019-03-26
74960   2019-03-27
74961   2019-03-28
74962   2019-03-29
74963   2019-03-29
Name: 交易日期, Length: 74964, dtype: datetime64[ns]
0        2019
1        2019
2        2019
3        2019
4        2019
         ...
74959    2019
74960    2019
74961    2019
74962    2019
74963    2019
Name: 交易日期, Length: 74964, dtype: int64
0         9
1        10
2        10
3        10
4        10
         ..
74959    13
74960    13
74961    13
74962    13
74963    13
Name: 交易日期, Length: 74964, dtype: int64
0        60
1        63
2        64
3        65
4        66
         ..
74959    85
74960    86
74961    87
74962    88
74963    88
Name: 交易日期, Length: 74964, dtype: int64
0        4
1        0
2        1
3        2
4        3
        ..
74959    1
74960    2
74961    3
74962    4
74963    4
Name: 交易日期, Length: 74964, dtype: int64
0        4
1        0
2        1
3        2
4        3
        ..
74959    1
74960    2
74961    3
74962    4
74963    4
Name: 交易日期, Length: 74964, dtype: int64
0        31
1        31
2        31
3        31
4        31
         ..
74959    31
74960    31
74961    31
74962    31
74963    31
Name: 交易日期, Length: 74964, dtype: int64
0         True
1        False
2        False
3        False
4        False
         ...
74959    False
74960    False
74961    False
74962    False
74963    False
Name: 交易日期, Length: 74964, dtype: bool
0        False
1        False
2        False
3        False
4        False
         ...
74959    False
74960    False
74961    False
74962    False
74963    False
Name: 交易日期, Length: 74964, dtype: bool
0       2019-03-02
1       2019-03-05
2       2019-03-06
3       2019-03-07
4       2019-03-08
           ...
74959   2019-03-27
74960   2019-03-28
74961   2019-03-29
74962   2019-03-30
74963   2019-03-30
Name: 交易日期, Length: 74964, dtype: datetime64[ns]
0       1 days
1       1 days
2       1 days
3       1 days
4       1 days
         ...
74959   1 days
74960   1 days
74961   1 days
74962   1 days
74963   1 days
Name: 交易日期, Length: 74964, dtype: timedelta64[ns]
#+end_example
